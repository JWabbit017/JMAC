<header>
    <h3>JMAC Docs</h3><span><a>JMAC</a> / <a href="index.php">docs</a> / Form()</span>
</header>
<hr>
<section id="intro">
    <h3>Form()<span class="mono">Method : JConstructor</span></h3>
    <p>Dynamically forms multiple HTML elements in parallel</p>
</section>
<hr class="inter">
<section id="main">
    <div id="values">
        <h3>Values</h3>
        <div class="snippet">
            <span class="code">function Form(base: string|Array, usingId?: boolean, identifier: string|Array, ...attributes: Array): Node|Array</span>
        </div>
    </div>
    <hr>
    <div id="parameters">
        <h3>Parameters</h3>
        <dl>
            <dt>base</dt>
            <dd>The names of the elements to be formed - can accept a string in case of a single element being generated <em>or</em> all elements being the same.</dd>
            <dd>No default value.</dd>
            <dt>usingId</dt>
            <dd>Can be enabled if you are generating a single element and wish to use the <span class="mono">id</span> attribute instead of <span class="mono">class</span>.</dd>
            <dd>Defaults to <span class="mono">false</span>.</dd>
            <dt>identifier</dt>
            <dd>The content of the <span class="mono">id</span> or <span class="mono">class</span> attribute(s) being formed.</dd>
            <dd>No default value.</dd>
            <dt>attributes</dt>
            <dd>A rest parameter which must contain <span class="mono">Arrays</span>. It determines all other attributes to be appended to the forming <span class="mono">Node</span>.</dd>
            <dd>The structure of the data passed to this parameter is strict. See the following example:</dd>
<dd>
<pre>
<div class="snippet">
<span class="code">let attributes = [
    ["type", "text"],
    ["name", "field"],
    ["value", "set"]
];</span>
<span class="comment">// attributes[x][0] must contain the attribute name</span>
<span class="comment">// attributes[x][1] must contain the attribute value</span>

<span class="comment">// Every element generated by this Form() method will now get all three attributes</span>

</div>
</pre>
</dd>
        </dl>
        <h3>Returns</h3>
        <dl>
            <dt>Node</dt>
            <dd>A <span class="mono">HTMLElement Node</span> with the requested properties.</dd>
            <dt>Array</dt>
            <dd>Contains all formed nodes in case of multiple being generated.</dd>
        </dl>
    </div>
    <hr>
    <div id="errors">
        <h3>Common Errors</h3>
        <dl>
            <dt>TypeError: At least 1 parameter is not a number or float</dt>
            <dd>Often occurs when <a href="#parameters">values</a> is accidentaly passed an <span class="mono">Array</span>.</dd>
        </dl>
    </div>
    <hr>
    <div id="example">
        <h3>Example</h3>
        <div class="snippet">
<pre>
<span class="code">
const average = JMath.Average(3, 8, 1, 9, 3, 8, 25);
</span>
<span class="comment">// Should return:</span>
<span class="code">
8.14285714285
</span>
</pre>
        </div>
    </div>
    <hr>
    <div id="notes">
        <h3>Notes</h3>
        <ul>
            <li>This method is probably most useful when Array deconstruction is used to dynamically pass a larger collection of numbers.</li>
        </ul>
    </div>
    <hr>
    <div id="log">
        <h3>Log</h3>
        <div>
            <section>
                <h4>JMAC d | 23-05-25</h4>
                <p>Method introduced.</p>
            </section>
        </div>
    </div>
</section>